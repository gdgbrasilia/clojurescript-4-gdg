{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name patterning.maths, :imports nil, :requires nil, :uses nil, :defs {contains-point {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 91, :column 7, :end-line 91, :end-column 21, :arglists (quote ([t [x y]]))}, :name patterning.maths/contains-point, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 21, :method-params ([t p__34514]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t [x y]]))}, rotate-point {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 56, :column 7, :end-line 56, :end-column 19, :arglists (quote ([a [x y]]))}, :name patterning.maths/rotate-point, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 19, :method-params ([a p__34493]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a [x y]]))}, distance {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 41, :column 7, :end-line 41, :end-column 15, :arglists (quote ([p1 p2]))}, :name patterning.maths/distance, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 15, :method-params ([p1 p2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p1 p2]))}, atan2 {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 12, :column 7, :end-line 12, :end-column 12, :arglists (quote ([x y]))}, :name patterning.maths/atan2, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 12, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, p-eq {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([[x1 y1] [x2 y2]])), :doc "point equality"}, :name patterning.maths/p-eq, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 11, :method-params ([p__34413 p__34414]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x1 y1] [x2 y2]])), :doc "point equality"}, point-in-list {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 71, :column 7, :end-line 71, :end-column 20, :arglists (quote ([p ps]))}, :name patterning.maths/point-in-list, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 20, :method-params ([p ps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p ps]))}, line-to-segments {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 49, :column 7, :end-line 49, :end-column 23, :arglists (quote ([points]))}, :name patterning.maths/line-to-segments, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 23, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, diff {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 39, :column 7, :end-line 39, :end-column 11, :arglists (quote ([[x1 y1] [x2 y2]]))}, :name patterning.maths/diff, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 11, :method-params ([p__34441 p__34442]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x1 y1] [x2 y2]]))}, drop-every {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 102, :column 7, :end-line 102, :end-column 17, :arglists (quote ([n xs]))}, :name patterning.maths/drop-every, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 17, :method-params ([n xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n xs]))}, wobble-point {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 62, :column 7, :end-line 62, :end-column 19, :arglists (quote ([[qx qy] [x y]])), :doc "add some noise to a point, qx and qy are the x and y ranges of noise"}, :name patterning.maths/wobble-point, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 19, :method-params ([p__34500 p__34501]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[qx qy] [x y]])), :doc "add some noise to a point, qx and qy are the x and y ranges of noise"}, q-PI {:name patterning.maths/q-PI, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 8, :column 1, :end-line 8, :end-column 10, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 8, :column 6, :end-line 8, :end-column 10}}, clock-points {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 73, :column 7, :end-line 73, :end-column 19, :arglists (quote ([n r]))}, :name patterning.maths/clock-points, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 19, :method-params ([n r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n r]))}, f-eq {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 35, :column 7, :end-line 35, :end-column 11, :arglists (quote ([a b])), :doc "floating point equality"}, :name patterning.maths/f-eq, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 11, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :doc "floating point equality"}, x-in-list {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 67, :column 7, :end-line 67, :end-column 16, :arglists (quote ([x my= xs]))}, :name patterning.maths/x-in-list, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 16, :method-params ([x my= xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x my= xs]))}, pol-to-rec {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 47, :column 7, :end-line 47, :end-column 17, :arglists (quote ([[r a]]))}, :name patterning.maths/pol-to-rec, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 17, :method-params ([p__34483]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[r a]]))}, clock-angles {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 17, :column 7, :end-line 17, :end-column 19, :arglists (quote ([number]))}, :name patterning.maths/clock-angles, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 19, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, cos {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 13, :column 7, :end-line 13, :end-column 10, :arglists (quote ([a]))}, :name patterning.maths/cos, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 10, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a]))}, triangle {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 79, :column 7, :end-line 79, :end-column 15, :arglists (quote ([ax ay bx by cx cy]))}, :name patterning.maths/triangle, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 15, :method-params ([ax ay bx by cx cy]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 6, :fn-var true, :arglists (quote ([ax ay bx by cx cy]))}, mol=v {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 27, :column 7, :end-line 27, :end-column 12, :arglists (quote ([xs ys])), :doc "more or less equal vectors"}, :name patterning.maths/mol=v, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 12, :method-params ([xs ys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xs ys])), :doc "more or less equal vectors"}, rec-to-pol {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 46, :column 7, :end-line 46, :end-column 17, :arglists (quote ([[x y]]))}, :name patterning.maths/rec-to-pol, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 17, :method-params ([p__34476]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]]))}, mol= {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 25, :column 7, :end-line 25, :end-column 11, :arglists (quote ([x y])), :doc "more or less equal"}, :name patterning.maths/mol=, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 11, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "more or less equal"}, sqrt {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 10, :column 7, :end-line 10, :end-column 11, :arglists (quote ([x]))}, :name patterning.maths/sqrt, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, half-PI {:name patterning.maths/half-PI, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 7, :column 1, :end-line 7, :end-column 13, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 7, :column 6, :end-line 7, :end-column 13}}, unit {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 42, :column 7, :end-line 42, :end-column 11, :arglists (quote ([[dx dy]]))}, :name patterning.maths/unit, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 11, :method-params ([p__34462]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[dx dy]]))}, PI {:name patterning.maths/PI, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 6, :column 1, :end-line 6, :end-column 8, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 6, :column 6, :end-line 6, :end-column 8}}, map-until-repeat {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 107, :column 7, :end-line 107, :end-column 23, :arglists (quote ([f eq-test ins]))}, :name patterning.maths/map-until-repeat, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 23, :method-params ([f eq-test ins]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f eq-test ins]))}, triangle-points {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 98, :column 7, :end-line 98, :end-column 22, :arglists (quote ([t]))}, :name patterning.maths/triangle-points, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 22, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, add-points {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 38, :column 7, :end-line 38, :end-column 17, :arglists (quote ([[x1 y1] [x2 y2]]))}, :name patterning.maths/add-points, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 17, :method-params ([p__34427 p__34428]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x1 y1] [x2 y2]]))}, perimeter {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 84, :column 7, :end-line 84, :end-column 16, :arglists (quote ([t]))}, :name patterning.maths/perimeter, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 16, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, rev {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 44, :column 7, :end-line 44, :end-column 10, :arglists (quote ([[dx dy]]))}, :name patterning.maths/rev, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 10, :method-params ([p__34469]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[dx dy]]))}, magnitude {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 40, :column 7, :end-line 40, :end-column 16, :arglists (quote ([[dx dy]]))}, :name patterning.maths/magnitude, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 16, :method-params ([p__34455]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[dx dy]]))}, take-every {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 104, :column 7, :end-line 104, :end-column 17, :arglists (quote ([n xs]))}, :name patterning.maths/take-every, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 17, :method-params ([n xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n xs]))}, tx {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 19, :column 7, :end-line 19, :end-column 9, :arglists (quote ([o1 o2 t1 t2 x])), :doc "transform a scalar from one space to another. o1 is origin min, o2 is origin max, t1 is target min, t2 is target max"}, :name patterning.maths/tx, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 9, :method-params ([o1 o2 t1 t2 x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 5, :fn-var true, :arglists (quote ([o1 o2 t1 t2 x])), :doc "transform a scalar from one space to another. o1 is origin min, o2 is origin max, t1 is target min, t2 is target max"}, abs {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 11, :column 7, :end-line 11, :end-column 10, :arglists (quote ([n]))}, :name patterning.maths/abs, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, molp= {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 26, :column 7, :end-line 26, :end-column 12, :arglists (quote ([[x1 y1] [x2 y2]])), :doc "more or less equal points"}, :name patterning.maths/molp=, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 12, :method-params ([p__34391 p__34392]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x1 y1] [x2 y2]])), :doc "more or less equal points"}, sin {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 14, :column 7, :end-line 14, :end-column 10, :arglists (quote ([a]))}, :name patterning.maths/sin, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 10, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a]))}, area {:protocol-inline nil, :meta {:file "/media/phil/MyData/new_dev_tree/teaching/googdevgroup/present/resources/public/js/compiled/devcards_out/patterning/maths.cljc", :line 86, :column 7, :end-line 86, :end-column 11, :arglists (quote ([t]))}, :name patterning.maths/area, :variadic false, :file "resources/public/js/compiled/devcards_out/patterning/maths.cljc", :end-column 11, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:ax :ay :A :B :C :bx :c :cx :cy :b :by :a}, :order [:ax :ay :A :B :C :bx :c :cx :cy :b :by :a]}, :doc nil}